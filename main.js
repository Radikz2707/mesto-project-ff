(()=>{"use strict";function e(e){var t=e.likes,r=e.likeButton,n=e.likesCounterBox,o=e.profileId;t.some((function(e){return e._id===o}))?r.classList.add("card__like-button_is-active"):r.classList.remove("card__like-button_is-active"),n.textContent=t.length}function t(t,r,n,o,c,u){var a=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0),i=a.querySelector(".card__delete-button"),l=a.querySelector(".card__title"),s=a.querySelector(".card__image");s.src=t.link,s.alt=t.name,l.textContent=t.name;var p=a.querySelector(".card__like-box"),d=p.querySelector(".card__like-button"),f=p.querySelector(".likes");return e({likes:t.likes,likeButton:d,likesCounterBox:f,profileId:n}),function(e,r,n,c){e!==r?n.classList.add("card__delete-button_disabled"):n.addEventListener("click",(function(){o(t._id,a)}))}(t.owner._id,n,i),s.addEventListener("click",(function(){return r(t)})),d.addEventListener("click",(function(){return function(t,r,n,o,c,u){(t.classList.contains("card__like-button_is-active")?o:n)(r).then((function(r){e({likes:r.likes,likeButton:t,likesCounterBox:c,profileId:u})})).catch((function(e){return console.log(e)}))}(d,t._id,c,u,f,n)})),a}function r(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",n)}function n(e){27===e.keyCode&&o(document.querySelector(".popup_is-opened"))}function o(e){e&&(e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",n))}function c(e){e.target===e.currentTarget&&o(e.target)}Array.from(document.querySelectorAll(".popup"));var u={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"};function a(e,t){var r=t.inputSelector,n=t.submitButtonSelector,o=Array.from(e.querySelectorAll(r)),c=e.querySelector(n);o.forEach((function(r){l(e,r,t)})),i(o,c,t)}function i(e,t,r){var n=r.inactiveButtonClass;!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.disabled=!1,t.classList.remove(n)):(t.disabled=!0,t.classList.add(n))}function l(e,t,r){var n=r.inputErrorClass,o=r.errorClass,c=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(n),c.classList.remove(o),c.textContent=""}var s={baseUrl:"https://nomoreparties.co/v1/wff-cohort-7/",headers:{authorization:"b89de6ef-3048-4fb3-a03c-5526d5660f24","Content-Type":"application/json"}};function p(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}var d=function(e){return fetch("".concat(s.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:s.headers}).then((function(e){return p(e)}))},f=function(e){return fetch("".concat(s.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:s.headers}).then((function(e){return p(e)}))};function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}!function(e){var t=e.formSelector;Array.from(document.querySelectorAll(t)).forEach((function(t){!function(e,t){var r=t.inputSelector,n=t.submitButtonSelector,o=Array.from(e.querySelectorAll(r)),c=e.querySelector(n);i(o,c,t),o.forEach((function(r){r.addEventListener("input",(function(){!function(e,t,r){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?l(e,t,r):function(e,t,r,n){var o=n.inputErrorClass,c=n.errorClass,u=e.querySelector(".".concat(t.id,"-error"));t.classList.add(o),u.textContent=r,u.classList.add(c)}(e,t,t.validationMessage,r)}(e,r,t),i(o,c,t)}))}))}(t,e)}))}(u);var y=document.querySelector(".page__content"),v=Array.from(document.querySelectorAll(".popup")),m=document.querySelector(".places__list"),h=y.querySelector(".popup_type_edit"),S=h.querySelector(".popup__form"),b=S.querySelector(".popup__input_type_name"),q=S.querySelector(".popup__input_type_description"),k=S.querySelector(".popup__button"),E=k.textContent,g=y.querySelector(".popup_type_new-card"),C=g.querySelector(".popup__form"),L=C.querySelector(".popup__button"),A=C.querySelector(".popup__input_type_card-name"),x=C.querySelector(".popup__input_type_url"),B=y.querySelector(".profile"),T=B.querySelector(".profile__edit-button"),U=B.querySelector(".profile__add-button"),w=B.querySelector(".profile__image"),P=B.querySelector(".profile__title"),j=B.querySelector(".profile__description"),O=y.querySelector(".popup_type_edit_avatar"),I=O.querySelector(".popup__form"),D=I.querySelector(".popup__button"),M=I.querySelector(".popup__input_type_avatar_link"),N=y.querySelector(".popup_type_image"),J=N.querySelector(".popup__image"),G=N.querySelector(".popup__caption"),H=y.querySelector(".popup_type_delete-card"),V=H.querySelector(".popup__form").querySelector(".popup__button"),z="",$="Сохранение...",F={_id:null,card:null};function K(e,t){e.textContent=t}function Q(e){P.textContent=e.name,j.textContent=e.about,w.style.backgroundImage="url(".concat(e.avatar,")")}function R(e,t){F._id=e,F.card=t,r(H)}function W(e){var t=e.name,n=e.link;J.src=n,J.alt=t,G.textContent=t,r(N)}Promise.all([fetch("".concat(s.baseUrl,"/cards"),{method:"GET",headers:s.headers}).then((function(e){return p(e)})),fetch("".concat(s.baseUrl,"/users/me"),{method:"GET",headers:s.headers}).then((function(e){return p(e)}))]).then((function(e){var r,n,o=(n=2,function(e){if(Array.isArray(e))return e}(r=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,c,u,a=[],i=!0,l=!1;try{if(c=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;i=!1}else for(;!(i=(n=c.call(r)).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,o=e}finally{try{if(!i&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(r,n)||function(e,t){if(e){if("string"==typeof e)return _(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_(e,t):void 0}}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=o[0],u=o[1];z=u._id,Q(u),c.forEach((function(e){m.append(t(e,W,z,R,d,f))}))})).catch((function(e){return console.log(e)})),v.forEach((function(e){e.querySelector(".popup__close").addEventListener("click",(function(){return o(e)})),e.addEventListener("click",c)})),T.addEventListener("click",(function(e){e.stopPropagation(),b.value=P.textContent,q.value=j.textContent,a(S,u),r(h)})),U.addEventListener("click",(function(e){e.stopPropagation(),A.value="",x.value="",a(C,u),r(g)})),w.addEventListener("click",(function(e){e.stopPropagation(),M.value="",a(I,u),r(O)})),S.addEventListener("submit",(function(e){e.preventDefault();var t={name:b.value,about:q.value};K(k,$),function(e){return fetch("".concat(s.baseUrl,"/users/me"),{method:"PATCH",headers:s.headers,body:JSON.stringify(e)}).then((function(e){return p(e)}))}(t).then((function(e){Q(e),o(h)})).catch((function(e){return console.log(e)})).finally((function(){K(k,E)}))})),C.addEventListener("submit",(function(e){e.preventDefault();var r,n={name:A.value,link:x.value};K(L,$),(r=n,fetch("".concat(s.baseUrl,"/cards"),{method:"POST",headers:s.headers,body:JSON.stringify(r)}).then((function(e){return p(e)}))).then((function(e){m.prepend(t(e,W,z,R,d,f)),o(g)})).catch((function(e){return console.log(e)})).finally((function(){K(L,E)}))})),V.addEventListener("click",(function(e){var t;e.preventDefault(),(t=F._id,fetch("".concat(s.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:s.headers}).then((function(e){return p(e)}))).then((function(){F.card.remove(),o(H)})).catch((function(e){return console.log(e)}))})),I.addEventListener("submit",(function(e){e.preventDefault();var t,r=M.value;K(D,$),(t=r,fetch("".concat(s.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:s.headers,body:JSON.stringify({avatar:t})}).then((function(e){return p(e)}))).then((function(e){Q(e),o(O)})).catch((function(e){return console.log(e)})).finally((function(){K(D,E)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,